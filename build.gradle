plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'

    // Jacoco 플러그인 추가
    id 'jacoco'
}

group = 'com.sprint.project.monew'
version = '0.0.1-SNAPSHOT'
description = 'sb05-MoNew-team05'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    
    // Spring WebFlux (WebClient)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Jackson JSON 처리
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // QueryDSL JPA
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

    // QueryDSL Annotation Processor
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // 문자 유사도 검사 라이브러리
    implementation 'org.apache.commons:commons-text:1.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // 테스트 완료 후 커버리지 리포트 자동 생성
}

jacocoTestReport {
    dependsOn test // test 후에 실행
    reports {
        xml.required = true
        html.required = true
        // 커버리지 리포트 경로
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }
}
